// Common utility mixins for patterns found across components
// Temporary - will be replaced by Figma tokens

@use './color.scss' as color;
@use './spacing.scss' as spacing;
@use './radius.scss' as radius;
@use './typography.scss' as typography;

// Common card style
@mixin card-base {
  background-color: color.$white;
  @include radius.card-radius;
  @include spacing.card-padding;
}

// Button variants
@mixin button-primary {
  background-color: color.$purple-100;
  color: color.$white;
  @include radius.button-radius;
  @include spacing.button-padding-md;
  @include typography.body-md;
  @include typography.font-weight-semibold;
  border: none;
  cursor: pointer;
  
  &:hover {
    background-color: color.$purple-200;
  }
  
  &:disabled {
    background-color: color.$gray-200;
    cursor: not-allowed;
  }
}

@mixin button-secondary {
  background-color: color.$white;
  color: color.$purple-100;
  border: 1px solid color.$purple-100;
  @include radius.button-radius;
  @include spacing.button-padding-md;
  @include typography.body-md;
  @include typography.font-weight-semibold;
  cursor: pointer;
  
  &:hover {
    background-color: color.$purple-300;
  }
  
  &:disabled {
    border-color: color.$gray-200;
    color: color.$gray-100;
    cursor: not-allowed;
  }
}

// Grade color utility
@mixin grade-color($grade) {
  @if $grade == 'A+' or $grade == 'A' {
    color: color.$grade-a;
  } @else if $grade == 'B+' or $grade == 'B' {
    color: color.$grade-b;
  } @else if $grade == 'C+' or $grade == 'C' {
    color: color.$grade-c;
  } @else if $grade == 'D+' or $grade == 'D' {
    color: color.$grade-d;
  } @else {
    color: color.$grade-f;
  }
}

// Kakao login button
@mixin kakao-button {
  background-color: color.$kakao-yellow;
  color: color.$kakao-text;
  @include radius.button-radius;
  @include spacing.button-padding-md;
  @include typography.body-md;
  @include typography.font-weight-semibold;
  border: none;
  cursor: pointer;
  
  &:hover {
    opacity: 0.9;
  }
}

// Loading spinner
@mixin loading-spinner {
  @include radius.radius-full;
  border: 2px solid color.$gray-300;
  border-top-color: color.$purple-100;
  animation: spin 1s linear infinite;
}

@keyframes spin {
  to {
    transform: rotate(360deg);
  }
}

// Error state
@mixin error-text {
  color: color.$error;
  @include typography.body-sm;
}

// Success state  
@mixin success-text {
  color: color.$success;
  @include typography.body-sm;
}

// Flex center utilities
@mixin flex-center {
  display: flex;
  align-items: center;
  justify-content: center;
}

@mixin flex-center-column {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
}